// function ClosestVehicle(lat, lng, vehicles) {
//     const xhr = new XMLHttpRequest();
//     xhr.open('POST', url, true);
//     xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
//     xhr.onreadystatechange = function () {
//         if (xhr.readyState === 4 && xhr.status === 200) {
//             const vehicles = JSON.parse(xhr.responseText);
//             let closestDist = 99999999;
//             let closestVehicle = null;
//             for (let i = 0; i < vehicles.length; i++) {
//                 const vehicle = vehicles[i];
//                 const dist = distance(latitude, longitude, vehicle.lat, vehicle.lng);
//                 if (dist < closestDist) {
//                     closestDist = dist;
//                     closestVehicle = vehicle;
//                     console.log(closestDist);
//                     console.log(closestVehicle);
//                 }
//             }
//             if (closestVehicle !== null) {
//                 const infowindow = new google.maps.InfoWindow({
//                     content: "User: " + closestVehicle.username + "<br>" + "Distance: " + closestDist.toFixed(2) + " miles."
//                 });
//                 infowindow.open(map, currentlocation);
//                 google.maps.event.addListener(currentlocation, 'click', function () {
//                     infowindow.open(map, currentlocation);
//                 });
//                 const polyline = new google.maps.Polyline(
//                     {
//                         path:
//                             [
//                                 { lat: lat, lng: lng },
//                                 { lat: closestVehicle.lat, lng: closestVehicle.lng }
//                             ],
//                         geodesic: true,
//                         strokeColor: '#FF0000',
//                         strokeOpacity: 1.0,
//                         strokeWeight: 2
//                     });
//                 polyline.setMap(map);
//                 google.maps.event.addListener(polyline, 'click', function () {
//                     infowindow.setContent("Closest vehicle: " + closestVehicle.username + "<br>" + "Distance: " + closestDist.toFixed(2) + " miles");
//                     infowindow.open(map, polyline);
//                 });
//                 const vehicleMarker = new google.maps.Marker({
//                     position: { lat: closestVehicle.lat, lng: closestVehicle.lng },
//                     map: map,
//                     icon: "car.png",
//                     title: closestVehicle.username,
//                 });

//                 google.maps.event.addListener(vehicleMarker, 'click', function () {
//                     const vehicleInfowindow = new google.maps.InfoWindow({
//                         content: "Vehicle: " + closestVehicle.username + "<br>" + "Distance: " + closestDist.toFixed(2) + " miles."
//                     });

//                     vehicleInfowindow.open(map, vehicleMarker);
//                 });
//             }
//         } else {
//             console.log("Request Failed. " + xhr.status);
//         }
//     };
//     xhr.send();

// }

// function Distance(lat1, lng1, lat2, lng2) {
//     const R = 6371e3; // Earth's radius in meters
//     const φ1 = toRadians(lat1);
//     const φ2 = toRadians(lat2);
//     const Δφ = toRadians(lat2 - lat1);
//     const Δλ = toRadians(lng2 - lng1);

//     const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +
//         Math.cos(φ1) * Math.cos(φ2) *
//         Math.sin(Δλ / 2) * Math.sin(Δλ / 2);
//     const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
//     const d = R * c;

//     return d;
// }

// function toRadians(degrees) {
//     return degrees * Math.PI / 180;
// }

// function distance(lat1, lon1, lat2, lon2) {
//     var latLngA = new google.maps.LatLng(lat1, lon1);
//     var latLngB = new google.maps.LatLng(lat2, lon2);
//     var distance = google.maps.geometry.spherical.computeDistanceBetween(latLngA, latLngB) / 1000;
//     const milesPerKilometer = 0.62137119;
//     return distance * milesPerKilometer;
// }


